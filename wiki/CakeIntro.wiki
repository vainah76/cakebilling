#summary Как это всё работает?
#labels Featured

[ [CakeBaseInstall <<] ] [ [CakeBaseInstall <] ] [ [CakeToc В начало] ] [ [CakeInstallHowto >] ] [ [InstallPostgresToc >>] ]



====Состав системы====

Система состоит из нескольких независимых модулей:

  * *pptpd* - менеджер VPN соединений. Обеспечивает первоначальное подключение и обращение к pppd.
  * *pppd* - транспортный инкапсулятор туннелей. Обеспечивает инкапсуляцию PPP в IP протокол.
  * *FreeRADIUS* - RADIUS сервер. Обеспечивает AAA (Authorization, Authentication, and Accounting).
  * *PostgreSQL* - сервер СУБД. Обеспечивает хранение аккаунтов, информации о траффике, содержит необходимую бизнес-логику для учёта потребляемого траффика, лимитирования доступа в интернет, а так же обеспечивает целостность данных.

====Механизм соединения====

  # На стороне клиента создаем VPN подключение.
  # Далее при попытке подключения к серверу *pptpd* создает *GRE туннель* и запускает *pppd*.
  # *pppd* запрашивает авторизацию у *RADIUS сервера*.
  # *RADIUS сервер* обращается к *СУБД* и на основе полученных данных формирует ответ.
  # *pppd* получает ответ от *RADIUS сервера*, разрешающий или запрещающий подключение.
  # Про получении разрешающего ответа, *pppd* устанавливает различные лимиты ( по времени или допустимому объему трафика) на сессию, если необходимые атрибуты содержались в ответе.
  # После этого *pppd* отправляет *RADIUS серверу* пакет с уведомлением о старте сессии.
  # Далее *pppd* может отправлять данные о промежуточном состоянии сессии, если в  ответе от *RADIUS сервера* был установлен необходимый атрибут.
  # Сессия завершается при разрыве соединения *пользователем* или *pppd* при превышении установленных лимитов.
  # После закрытия сессии *pppd* отсылает *RADIUS серверу* пакет о завершении сессии.

====Порядок обмена пакетами (в терминах RADIUS протокола)====


|| *шаг* || *пакет* || *цель* || *-* || *цель* || *атрибуты* || *примечания* ||
|| * _авторизация_ * || || || || || || ||
|| 1 || auth-request || pppd || > || radius || username, userpassword || запрос на существоание юзера в базе||
|| 2 || auth-accept/auth-reject || pppd || < || radius || yes or no || есть/нет ||
|| * _получение reply пакета/отлуп_ * ||  || || || || || ||
|| 3 || auth-reply || pppd || < || radius || traffic limit, time limit || ответ ||
|| * _работа на линии_ * || || || || || || ||
|| 5 || acct-start || pppd || > || radius || current datetime, username, session id || старт сессии||
|| 6 || acct-alive || pppd || > || radius || current datetime, session id, traffic || обновление данных сессии ||
|| ... || acct-alive || ppd || > || radius || ... || повторение с заданным периодом ||
|| 7 || acct-stop || pppd || > || radius || current datetime, traffic || стоп сессии ||
|| * _отлуп_ * ||  || || || || || ||

[ [CakeBaseInstall <<] ] [ [CakeBaseInstall <] ] [ [CakeToc В начало] ] [ [CakeInstallHowto >] ] [ [InstallPostgresToc  >>] ]